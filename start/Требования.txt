Хорошо, давайте представим, что ваш проект "Клавиатурный тренажер" - это готовый продукт, который необходимо передать заказчику. Исходя из того, что у нас есть, сформулируем требования для него.

1. Функциональные требования:

1.1. Режимы игры:
Система должна предоставлять возможность выбора источника текста: уроки (из файлов) или интернет (API шуток).
Система должна динамически загружать список уроков из директории lessons и отображать их в выпадающем списке.
Система должна загружать текст уроков из выбранного файла и отображать его для ввода.
Система должна предоставлять возможность ввода целевой скорости печати (символов в минуту).
Система должна отслеживать введенный пользователем текст и сравнивать его с целевым текстом.
Система должна выделять правильно и неправильно введенные символы.
Система должна рассчитывать и отображать скорость печати (символов в минуту).
Система должна рассчитывать и отображать точность печати (в процентах).
Система должна отображать таймер, показывающий оставшееся время до окончания упражнения.
Система должна завершать игру после ввода всего текста или по истечении времени.
1.2. Пользовательский интерфейс:
Система должна иметь интуитивно понятный и удобный пользовательский интерфейс.
Система должна отображать индикатор загрузки при загрузке текста.
Система должна динамически менять фоновые изображения с эффектом затухания.
1.3. API:
Система должна использовать внешний API для получения шуток в качестве текста для упражнений.
Система должна обрабатывать ошибки при получении данных от API.
Система должна генерировать случайные слова в случае ошибки API.
1.4. Локальное открытие:
Система должна предоставлять возможность открытия приложения непосредственно в браузере пользователя, с помощью запуска node.js скрипта.
2. Нефункциональные требования:

2.1. Производительность:
Система должна обеспечивать быструю загрузку текста и отображение результатов.
Система должна корректно работать на различных типах устройств и в различных браузерах.
2.2. Удобство использования:
Система должна иметь простой и понятный интерфейс.
Система должна предоставлять обратную связь пользователю о его прогрессе.
2.3. Надежность:
Система должна корректно обрабатывать ошибки, связанные с загрузкой уроков и получением данных от API.
2.4. Сопровождаемость:
Код системы должен быть хорошо структурирован и документирован.
2.5. Безопасность:
Система должна быть защищена от базовых веб-угроз, таких как XSS.
3. Требования к ресурсам:

3.1. Файлы уроков:
Система должна включать набор готовых уроков в формате текстовых файлов (.txt).
3.2. Изображения:
Система должна включать набор изображений для фона (.jpg).
4. Требования к документации:

4.1. Руководство пользователя:
Система должна включать руководство пользователя, описывающее основные функции и возможности.
4.2. Документация для разработчиков:
Код должен быть прокомментирован.
Необходимо создать файл README.md с описанием проекта и инструкциями по запуску.
Эти требования помогут вам представить проект заказчику и определить, какие аспекты необходимо улучшить или доработать.